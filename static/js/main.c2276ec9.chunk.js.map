{"version":3,"sources":["components/Image.js","components/Gallery.js","components/SearchBox.js","App.js","index.js","api/api.js"],"names":["Image","urls","handleClick","className","onClick","regular","src","small","alt","width","modalStyle","content","border","padding","overflow","Gallery","query","useState","imgList","setImgList","currentImg","setCurrentImg","useEffect","getTrendingImages","then","data","a","trim","getSearchedImages","Modal","setAppElement","contentLabel","style","isOpen","onRequestClose","length","options","isFitWidth","map","img","id","SearchBox","input","setInput","type","name","placeholder","minLength","debounceTimeout","value","onChange","e","target","App","render","document","querySelector","baseURL","require","config","API_KEY","console","log","process","fetch","headers","Authorization","res","ok","error","status","json","url","URL","search","URLSearchParams","per_page","results"],"mappings":"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","file":"static/js/main.c2276ec9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Image = ({ urls, handleClick }) => {\r\n\r\n  return (\r\n    <li className=\"img\" onClick={() => handleClick(urls.regular)}>\r\n      <img src={urls.small} alt=\"Picsum photo\" width=\"250\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Image;","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Image from \"./Image\";\r\n\r\nimport { getSearchedImages, getTrendingImages } from \"../api/api\";\r\nimport Masonry from \"react-masonry-component\";\r\n\r\nconst modalStyle = {\r\n  content: {\r\n    border: \"none\",\r\n    padding: \"none\",\r\n    overflow: \"none\",\r\n    // background: \"none\",\r\n  },\r\n};\r\nconst Gallery = ({ query }) => {\r\n  const [imgList, setImgList] = useState([]);\r\n  const [currentImg, setCurrentImg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getTrendingImages().then((data) => {\r\n      //   console.log(data);\r\n      setImgList(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    if (query.trim() === \"\") {\r\n      return;\r\n    }\r\n    const data = await getSearchedImages(query);\r\n    setImgList(data);\r\n    // console.log(data);\r\n  }, [query]);\r\n\r\n  Modal.setAppElement(\"#root\");\r\n  return (\r\n    <div>\r\n      <Modal\r\n        contentLabel=\"Image preview\"\r\n        style={modalStyle}\r\n        isOpen={!!currentImg}\r\n        onRequestClose={() => setCurrentImg(null)}\r\n      >\r\n        <img className=\"img-preview\" src={currentImg} alt=\"image preview\" />\r\n      </Modal>\r\n\r\n      {imgList?.length === 0 ? <h2>No images found</h2> : null}\r\n      <Masonry className=\"grid-container\" options={{ isFitWidth: true }}>\r\n        {imgList?.map((img) => {\r\n          return (\r\n            <Image\r\n              urls={img.urls}\r\n              handleClick={setCurrentImg}\r\n              key={img.id}\r\n            />\r\n          );\r\n        })}\r\n      </Masonry>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React, { useState } from \"react\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\n\r\nconst SearchBox = ({ input, setInput }) => {\r\n  return (\r\n    <DebounceInput\r\n      type=\"text\"\r\n      name=\"Photo Search\"\r\n      placeholder=\"Search for photos\"\r\n      className=\"searchBox\"\r\n      minLength={3}\r\n      debounceTimeout={300}\r\n      value={input}\r\n      onChange={(e) => setInput(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;","import React,{useState} from 'react'\nimport './style.css'\nimport Gallery from './components/Gallery'\nimport SearchBox from './components/SearchBox'\n\nconst App = () => {\n\n  const [input, setInput] = useState(\"\");\n    return (\n        <center>\n            <h1>Photo Search Application</h1>\n            <SearchBox input={input} setInput={setInput}/>\n            <Gallery query={input}/>\n        </center>\n    )\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nrender(<App/>, document.querySelector(\"#root\"));","const baseURL = \"https://api.unsplash.com/\";\r\nrequire('dotenv').config();\r\n//const API_KEY = process.env.REACT_APP_API_KEY;\r\nconst API_KEY='GxPFgWfSfm8eXIa7Unch_LVACHygI8bi-TsgC0sR41Y'\r\n\r\n\r\nexport const getTrendingImages = async () => {\r\n  \r\n  try {\r\n    console.log(\"process\",process);\r\n    const res = await fetch(`${baseURL}/photos?per_page=30`,{\r\n      headers: {\r\n        Authorization: `Client-ID ${API_KEY}`,\r\n      },\r\n    });\r\n    if (!res.ok) {\r\n      console.error(\"failed\", res.status);\r\n      return;\r\n    }\r\n    const json = await res.json();\r\n    // console.log(json);\r\n    return json;\r\n  } catch (error) {\r\n    console.error(\"error in making request\", error);\r\n  }\r\n};\r\n\r\n/** Return the searched images */\r\nexport const getSearchedImages = async (query) => {\r\n  const url = new URL(`${baseURL}/search/photos`);\r\n  url.search = new URLSearchParams({\r\n    per_page: 30,\r\n    query: query,\r\n  });\r\n  try {\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        Authorization: `Client-ID ${API_KEY}`,\r\n      },\r\n    });\r\n    if (!res.ok) {\r\n      console.error(\"failed\", res.status);\r\n      return;\r\n    }\r\n    const json = await res.json();\r\n    // console.log(json);\r\n    return json.results;\r\n  } catch (error) {\r\n    console.error(\"error in making request\", error);\r\n  }\r\n};"],"sourceRoot":""}